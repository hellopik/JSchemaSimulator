{"version":3,"sources":["validation.js","App.js","reportWebVitals.js","index.js"],"names":["JsonSkema","App","useState","jsonschema","jsonvalidated","value","setValue","handleInput","e","nilai","target","name","prevState","console","log","jiah","className","class","rows","cols","onChange","onClick","mantab","JSON","parse","mantabs","jos","Validator","validate","errors","length","alert","beautify","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPAgDeA,EAhDC,CACd,QAAW,yCACX,KAAQ,SACR,WAAc,CACZ,KAAQ,CACN,KAAQ,SACR,UAAa,EACb,UAAa,IAEf,WAAa,CACT,KAAS,UACT,KAAO,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,MAEhC,cAAiB,CACf,KAAQ,SACR,KAAQ,CACN,OACA,WAGJ,KAAQ,CACN,KAAQ,UACR,QAAW,GACX,iBAAoB,KAEtB,cAAiB,CACf,KAAQ,SACR,OAAU,QAEZ,MAAS,CACP,KAAQ,SACR,QAAW,4FAEb,OAAU,CACR,KAAQ,SACR,QAAW,wCAEb,OAAU,CACR,KAAQ,WAEZ,sBAAwB,EACxB,SAAY,CACV,OACA,W,iBC4BWC,MAjEf,WAAgB,IAAD,EACWC,mBAAS,CAACC,WAAW,GAAGC,cAAc,KADjD,mBACRC,EADQ,KACDC,EADC,KAYTC,EAAc,SAACC,GACnB,IAAIC,EAAQD,EAAEE,OAAOL,MACjBM,EAAOH,EAAEE,OAAOC,KACpBL,GAAS,SAACM,GAAD,mBAAC,eACLA,GADI,kBAEND,EAAMF,OAETI,QAAQC,IAAIT,IAEVU,EAAO,CACT,WAAa,IACb,KAAQ,kBACR,cAAiB,YACjB,KAAQ,GACR,cAAiB,aACjB,MAAS,kBACT,OAAU,gBACV,OAAU,uBAMV,OADAF,QAAQC,MAEN,qBAAKE,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,sBAAKC,MAAM,OAAX,UACE,mEACA,0BAEF,sBAAKA,MAAM,SAAX,UACE,sBAAKA,MAAM,gBAAX,UACE,mDACA,0BAAWZ,MAAOA,EAAMF,WAAYQ,KAAK,aAAaO,KAAK,KAAKC,KAAK,MAAMC,SAAUb,OAEvF,sBAAKU,MAAM,YAAX,UACA,uBAAOA,MAAM,UAAb,wCACA,0BAAUZ,MAAOA,EAAMD,cAAeO,KAAK,gBAAgBO,KAAK,KAAKC,KAAK,KAAKC,SAAUb,UAG3F,qBAAKU,MAAM,SAAX,SACE,wBAAQI,QAnDE,WAClB,IAAIC,EAASC,KAAKC,MAAMnB,EAAMD,eAC1BqB,EAAUF,KAAKC,MAAMnB,EAAMF,YAC3BuB,EAAMC,IAAUC,SAASN,EAAQG,GAClCC,EAAIG,OAAOC,OAAS,EACrBC,MAAM,+EAA+EL,GAErFK,MAAM,sDA4CA,wBAEF,qBAAKd,MAAM,SAAX,SACE,wBAAQI,QAzBS,SAACb,GAC1BF,EAAS,CAACH,WAAW6B,IAAShC,EAAW,KAAM,EAAG,KAAMI,cAAc4B,IAASjB,EAAM,KAAM,EAAG,QAwBtF,2BAEF,oBAAGE,MAAM,OAAT,0CAC+B,mBAAGgB,KAAK,qDAAR,2BCrDxBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c451cd2f.chunk.js","sourcesContent":["var JsonSkema = {\r\n  \"$schema\": \"http://json-schema.org/draft-07/schema\",\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"nama\": {\r\n      \"type\": \"string\",\r\n      \"minLength\": 4,\r\n      \"maxLength\": 64\r\n    },\r\n    \"kode_jenis\":{\r\n        \"type\" : \"integer\",\r\n        \"enum\":[450,480,460,470,520,530]\r\n    },\r\n    \"jenis_kelamin\": {\r\n      \"type\": \"string\",\r\n      \"enum\": [\r\n        \"pria\",\r\n        \"wanita\"\r\n      ]\r\n    },\r\n    \"umur\": {\r\n      \"type\": \"integer\",\r\n      \"minimum\": 18,\r\n      \"exclusiveMaximum\": 100\r\n    },\r\n    \"tanggal_lahir\": {\r\n      \"type\": \"string\",\r\n      \"format\": \"date\"\r\n    },\r\n    \"surel\": {\r\n      \"type\": \"string\",\r\n      \"pattern\": \"^[_A-Za-z0-9-\\\\+]+(\\\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\\\.[A-Za-z0-9]+)*(\\\\.[A-Za-z]{2,})$\"\r\n    },\r\n    \"noHape\": {\r\n      \"type\": \"string\",\r\n      \"pattern\": \"^(\\\\([0-9]{3}\\\\))?[0-9]{3}-[0-9]{4}$\"\r\n    },\r\n    \"no_NIK\": {\r\n      \"type\": \"integer\"\r\n    },\r\n  \"additionalProperties\": false,\r\n  \"required\": [\r\n    \"nama\",\r\n    \"surel\"\r\n  ]\r\n}\r\n}\r\n\r\nexport default JsonSkema","import React, { useState } from 'react';\nimport './App.css';\nimport beautify from 'json-beautify'\nimport JsonSkema from './validation.js'\nimport Validator from 'jsonschema'\n\nfunction App() {\nconst [value, setValue] = useState({jsonschema:\"\",jsonvalidated:\"\"})\nconst handleClick = () => {\n  var mantab = JSON.parse(value.jsonvalidated)\n  var mantabs = JSON.parse(value.jsonschema)\n  var jos = Validator.validate(mantab, mantabs)\n  if(jos.errors.length > 0){\n    alert(\"Lakukan Edit pada JSON yg akan Divalidasi agar error hilang ! \\n\\nError : \\n\"+jos+\"\")\n  } else {\n    alert(\"SUKSES PARSING ! Coba utak atik agar muncul error\")\n  }\n}\nconst handleInput = (e) => {\n  var nilai = e.target.value\n  var name = e.target.name\n  setValue((prevState) => ({\n    ...prevState,\n    [name]:nilai\n  }))\n  console.log(value)\n}\nvar jiah = {\n  \"kode_jenis\":630,\n  \"nama\": \"Taufiq Mahendra\",\n  \"jenis_kelamin\": \"Laki-Laki\",\n  \"umur\": 15,\n  \"tanggal_lahir\": \"2017-13-12\",\n  \"surel\": \"taufiq@gmailcom\",\n  \"noHape\": \"(410)804-4694\",\n  \"no_NIK\": \"3673020564758347364\",\n}\nconst handleClickExample = (e) => {\n  setValue({jsonschema:beautify(JsonSkema, null, 2, 100), jsonvalidated:beautify(jiah, null, 2, 100)})\n}\n  console.log();\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div class=\"huhu\">\n          <b>JSON Validator Against JSON Schema</b>\n          <hr/>\n        </div>\n        <div class=\"mantab\">\n          <div class=\"josgandos ehe\">\n            <label>JSON Schema : </label>\n            <textarea  value={value.jsonschema} name=\"jsonschema\" rows=\"25\" cols=\"120\" onChange={handleInput}></textarea>            \n          </div>\n          <div class=\"josgandos\">\n          <label class=\"maantab\" >JSON yg akan divalidasi : </label>\n          <textarea value={value.jsonvalidated} name=\"jsonvalidated\" rows=\"25\" cols=\"50\" onChange={handleInput}></textarea> \n          </div>       \n        </div>\n        <div class=\"mantab\">\n          <button onClick={handleClick}>Validasi</button> \n        </div> \n        <div class=\"mantab\">\n          <button onClick={handleClickExample}>Use Example</button> \n        </div> \n        <p class=\"hehe\">\n          Learn more about JSON Schema <a href=\"https://json-schema.org/understanding-json-schema/\">Here</a>\n        </p>                 \n      </header>\n    </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}